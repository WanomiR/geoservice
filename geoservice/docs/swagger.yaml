basePath: /
definitions:
  internal_modules_geo_controller_http_v1.AddressGeocode:
    properties:
      lat:
        example: "55.753214"
        type: string
      lng:
        example: "37.642589"
        type: string
    required:
    - lat
    - lng
    type: object
  internal_modules_geo_controller_http_v1.AddressSearch:
    properties:
      query:
        example: Подкопаевский переулок
        type: string
    required:
    - query
    type: object
  rr.JSONResponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: Geoservice API
  title: GeoService
  version: 1.0.0
paths:
  /address/geocode:
    post:
      consumes:
      - application/json
      description: Returns a list of addresses provided geo coordinates
      parameters:
      - description: coordinates
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/internal_modules_geo_controller_http_v1.AddressGeocode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rr.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rr.JSONResponse'
      summary: Search by coordinates
      tags:
      - address
  /address/search:
    post:
      consumes:
      - application/json
      description: Returns a list of addresses provided street name
      parameters:
      - description: street name
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/internal_modules_geo_controller_http_v1.AddressSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rr.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rr.JSONResponse'
      summary: Search by street name
      tags:
      - address
  /auth/login:
    post:
      parameters:
      - description: Email for login (john.doe@gmail.com)
        in: formData
        name: email
        required: true
        type: string
      - description: Password for login (password)
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rr.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rr.JSONResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rr.JSONResponse'
      summary: Logs user into the system
      tags:
      - auth
  /auth/logout:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rr.JSONResponse'
      summary: Logs out current user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
